Nikki DelRosso
CIS 461 - Intro to Compiler Construction
Spring 2013


Compiler for the Cool language for the University of Oregon spring 2013 compilers
class.  This compiler does not have the ArrayAny or Symbol classes implemented.


Prerequisites:
  This project was made using Python 2.7.3, and is not Python 3 compatible.
  Additionally, clang must be present on your system.  The path to the clang executable
  is configurable in the settings.py file.

Notes:
- String's substring and charAt methods don't check that the provided indices are in bounds.  
  This means that out-of-bounds incides will access unknown memory.

- The IO.in() method has an input limit of 1024 characters.  I don't know what happens if you
  enter more than that.

- Since Symbol is not implemented, IO does not have the Symbol methods.

----------

Usage: ./cool <FILE_INPUT>

Contents:
  src/       - Contains source code
  |
  | ply/       - The PLY library (so you don't have to install it!)
  |
  | driver.py  - The driver file.  Takes a cool file as input, and runs the lexer
  |              and parser on the file.
  |
  | error.py   - Contains exceptions for error handling.  Includes the 
  |              calculation of columns for error reporting
  |
  | lexer.py   - Contains lexing rules, token definitions, and a list of 
  |              "Extended Cool" reserved words
  |
  | parser.py  - Contains grammar rules and builds an abstract syntax tree using
  |              nodes from tree.py.  The yacc script generates a parse table on 
  |              its first run.
  |
  | tree.py    - Class definitions for the AST nodes, including methods to print 
  |              the tree.

  
  examples/  - Contains example cool programs
  
  README     - This file
  
  coolc      - A shortcut executable for running the driver file


